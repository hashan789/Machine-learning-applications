# -*- coding: utf-8 -*-
"""preterm_birth_risk.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Ps3581NT3wyEQ3a0Mb6enftZunffR9B4
"""

# Data Preprocessing (Needs Implementation)
# - Handle missing values
# - Encode categorical variables (e.g., pre-existing_conditions)

# Import libraries
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split
import pandas as pd
import numpy as np

data = pd.read_excel('pone.0286287.s001.xlsx')

# Feature matrix (independent variables) and target variable
data = pd.DataFrame(data)
data.fillna(0, inplace=True)
data = pd.get_dummies(data, columns=['maternaldiseases'])
X = data.drop('pretermbirth', axis=1)  # All columns except target
y = data['pretermbirth']

# Train-Test Split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Model Training
model = LogisticRegression(solver='lbfgs')
model.fit(X_train.values, y_train.values)

# Prediction on Test Data
y_pred = model.predict(X_test.values)

# Model Evaluation (Needs Implementation)
# - Calculate metrics like accuracy, precision, recall

# Example Prediction on New Data (Replace with actual values)
new_data = {'Age': 45, 'Birthweight': 5500, 'maternaldiseases': 'Diabetes', 'diabetes': 0, 'pretermbirth' : 0}
new_data = pd.get_dummies(pd.DataFrame(new_data, index=[0]), columns=['maternaldiseases'], drop_first=True)
new_X = new_data.reindex(columns=X_train.columns, fill_value=0)
 # Convert to DataFrame for prediction
# print(new_X)
# if (np.any(np.isnan(new_X))):
predicted_risk = model.predict_proba(new_X)[0][1]  # Probability of preterm birth
print(f"Predicted risk of preterm birth for new data: {predicted_risk:.2f}")

if predicted_risk > 0.5:
    print("High risk of preterm birth.")
elif predicted_risk > 0.25:
    print("Moderate risk of preterm birth.")
else:
    print("Low risk of preterm birth.")